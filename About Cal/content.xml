<?xml version='1.0' encoding='us-ascii'?>

<content>

    <page title="About This App" icon="blankApp">
        <item type="text">This app is a timeline of Cal's projects through time. Swiping right will take you on his journey. This is a journey of great proportions, spanning many years, several platforms, and over 50 individual projects.</item>
        <item type="text">This app was designed with love for the 2015 WWDC scholarship. With a little bit of luck and a lot-a-bit of code, Cal will be there.</item>
        <item type="image">wwdc logo/300</item>
    </page>

    <page title="About Cal" icon="cal icon">
        <item type="text">I am a Senior at Davidson Fine Arts High School in Augusta, Georgia. I have been admitted to Georgia Tech and plan to pursue a degree in Computer Science starting this fall.</item>
        <item type="text">I am an Indie App Developer, with one published app and several others in progress. My dream job is to lead my own project at Apple or some other tech giant. (Not to suck up, but I really do love Apple.)</item>
        <item type="text">Other than programming, I make films at my school and dream of space, the universe, and our place in it. I have more than one crackpot theory on the nature of the universe. My life goal is to stand on the surface of the moon. Fingers crossed for space tourism, right?</item>
    </page>
    
    <page title="Hello World" date="2009" icon="bottle">
        <item type="text">My first (successful) exposure to programming was through Warren Sande's amazing book "Hello World: Computer Programming for Kids and Other Beginners". The explanatory cartoons and kid-friendly language gave the insight that an 11-year-old Cal needed.</item>
        <item type="image">hello world/175</item>
        <item type="text">"Hello World" taught me how to harness the basics of Python. I used this newfound skill to dabble in "fun side projects". My crowning achievement was a rendition of Jeopardy that had hard-coded questions and answers, and probably a lot of spelling mistakes. Keep in mind that I was 11.</item>
        <item type="image">cal2011/250</item>
    </page>
    
    <page title="The Minecraft Era" date="2011 - 2013" icon="minecraft">
        <item type="text">For anyone my age or younger, Minecraft was not just a game, but a cultural phenomenon. For years, I spent my time bouncing between different multiplayer servers with my friends. After experiencing every different flavor of server out there (creative, survival, minigame, player vs player... the list goes on and on), we sought to start out own.</item>
        <item type="image">olympus/200</item>
        <item type="text">My friends and I launched our server Olympus PVP, to little fanfare. All of the best servers had custom server mods to customize the experience and differentiate them from the competition. We knew the only way for us to make any traction was for one of us to develop our own mods to mold a unique sort of gameplay. I already had some programming experience, so I gave it a shot.</item>
        <item type="text">The go-to Minecraft modding platform was Bukkit, a custom multiplayer server designed to allow developers to create plugins in Java using the extensive Craftbukkit API. After weeks of mucking around with tutorial videos and pure trial-and-error, I started figuring it out piece by piece.</item>
        <item type="image">olyAnvilLogo/200</item>
        <item type="text">We shut down the server and took time to redesign it. I set ambitious goals, seeking to innovate in every corner. For two months, I poured myself into developing a line of plugins: olyAnvil, olySquads, olyChat, olyTell, olyWarps... you get the picture. I made somewhere in the neighborhood of 15 individual plugins, all with a very specific purpose. After I was done, we put all the pieces together and were ready to launch again, but that's where I lost all my motivation. I realized I was no longer interested in running a server -- I had found all the fun I wanted in developing plugins. </item>
    </page>
    
    <page title="Unity Games" date="Summer 2012" icon="unity-logo">
        <item type="text">During the summer after I was in 9th grade, I went to the Duke TIP summer camp and participated in the "Team Video Game Programming" class. I learned how to use the Unity Game Engine and got my first experience with standalone applications. I already had experience with Java, so it wasn't difficult to hit the ground running. </item>
        <item type="video3">~calaga</item>
        <item type="text">Calaga, a space shooter game. (The name is a portmanteau of Cal and Galaga. Really original, I know.) It's not particularly fun or challenging, but it somehow became a class gag to see who could get the highest score.</item>
        <item type="video2">~molio</item>
        <item type="text">Molio, a 2D platformer I made a few months later for extra credit in my chemistry class (How does a game about a little blue blob warrant extra credit in a chemistry class? Your guess is as good as mine.)</item>
    </page>
    
    <page title="Producer Buddy" date="October 2013" icon="producerBuddyIcon">
        <item type="text">At my school, we have a Broadcasting and Film program. Every morning, we produce a live 8 minute show that is broadcast around campus. We learn industry standards for producing and directing, including planning for precision.</item>
        <item type="image">WDFAstill/160</item>
        <item type="text">A producer's best friend is their timer. For years, we used an analog clock face to tell time. The producer would read the time off the clock face in the form of "back time" (the amount of time remaining in the show), and then make a quick mental calculation of the "show time" (the amount of time since the show started). They use these two opposite times to keep the show on-schedule.</item>
        <item type="image">WDFAtimer/200</item>
        <item type="text">In the flurry of quick decisions a producer must make, it is easy to lose track of time. After one too many trainwrecks caused by producing errors, I looked to provide a solution. In the industry, they use synchronized clocks to keep track of definitive show time and back time digitally. Unfortunately, anything "industry" is a bit out of the budget of a high school these days.</item>
        <item type="image">producerBuddyDuke/250</item>
        <item type="text">Faced with a $0 budget, I dug a 2001 iMac G4 out of storage. It was very old, very slow, and had a cracked screen, but it was good enough to display a few timers. I created "Producer Buddy" in Java, and was able to make it compatible with the ancient version of OS X running on the iMac. (If only the Swift runtime ran on Power PC, am I right?)</item>
        <item type="image">producerBuddyLisa/290</item>
        <item type="text">As a bonus, I wired the iMac up to our network, found an old screen sharing program, and mirrored the clocks into our studio (which is across the hall from where the producer and director work). For the first time, people in both rooms could be in the loop on the show's running time, and the show was running smoother than ever. Producer Buddy gets used every day, and now it's just part of our workflow.</item>
    </page>
    
    <page title="Automation Nation" date="2014" icon="automator">
        <item type="text">I have a strong belief that nobody should ever do something that a computer can do quicker, especially not something horribly monotonous. I love building utilities to automate tasks and help people save time.</item>
        <item type="text">My mom is a teacher of gifted students in a nearby elementary school. One day she was telling me about a new program they were introducing called "Cluster Groups" where children get to choose a special class to be in for a portion of the year. To sort the kids into their groups, teachers collected sticky notes with the individual students' group choices. These sticky notes were then put on a wall where they were moved around until all groups had the proper number of students. She said this process took a teacher up to three days of work.</item>
        <item type="image">cluster/300</item>
        <item type="text">Why spend three days doing something that can be done by a computer in the click of a button? I developed a Java application called Cluster that takes a spreadsheet with the students' group choices and then automatically sorts them. This was so much easier than the manual method that other schools in the county bought this program for their teachers. It is currently being used by nearly 10 elementary schools in Columbia County, Georgia and one school in Rockdale County, Georgia. (Little did I know that selling software would turn my phone into an obligatory software support hotline.)</item>
        <item type="image">calGuru/300</item>
        <item type="text">A year later, I got the opportunity to help teach a cluster group. I volunteered as the assistant for a class that taught kids how to use MIT's Scratch to design games. The kids definitely had a good time and learned a lot along the way.</item>
    </page>
    
    <page title="Hear a Tale" date="2014 - 2015" icon="gingerbreadMan">
        <item type="text">In 2013, I got really lucky and one of my teachers connected me with Dr. Walter Evans. He's a professor at Georgia Regents University who was looking for somebody to hire for some video editing at the time. I began to work for him, and I edited footage of several theatrical performances. A year later, when he was looking for somebody to develop a website for him, I stepped up to the challenge.</item>
        <item type="image">hearATale/350</item>
        <item type="webtext">The website, Hear a Tale (http://hearatale.com), is part of a decade-long project he has had to help encourage literacy in children. He is a firm believer that rhymes and fairy tales can help foster literacy, so he slowly amassed a library of audio and video of many classic rhymes and fairy tales.</item>
        <item type="image">children/250</item>
        <item type="text">I built upon years of work by many people, but the website itself is almost entirely new. Written in a blend of PHP, HTML, and CSS, it serves as a directory for his library of rhymes and fairy tales, along with literature for students and adults. He has been very happy with the website, and has recently hired me again to develop two apps for iOS and Android (blasphemy, I know).</item>
    </page>
    
    <page title="Research" date="2013 - 2015" icon="raspberryPi">
        <item type="video">~MRI</item>
        <item type="text">I have participated in two research projects with professors in the Physics department at Georgia Regents University.</item>
        <item type="text">In 2013/2014, I worked with Dr. Trinanjan Datta on a project to simulate Site Percolation in different classes of lattices. I created a simulation platform in Java and presented my research at the 2014 Georgia Academy of Sciences meeting alongside Undergraduate research students from across the state despite only being a Junior in High School.</item>
        <item type="image">dattaGroup/200</item>
        <item type="text">In 2014/2015, I worked with Dr. Andy Hauger and Dr. Nathan Yanasak on a project to analyze the motion of children inside of an MRI simulation using the Raspberry Pi. I developed this application in Python and presented my research at the 2015 Georgia Academy of Sciences meeting. This time, I won the award for Outstanding Oral Presentation. We are currently working on upgrading the MRI simulation system and hope to deploy it to testing labs in the coming months.</item>
        <item type="image">talk2014/200</item>
        <item type="text">A longer cut of the video at the top of this page was submitted to the 2015 "Dream it. Code it. Win it." contest by the MIT Club of New York. Just before I submitted this app, I got news that I was selected as a winner of that competition.</item>
    </page>
    
    <page title="Swift" date="June 2, 2014" icon="swift">
        <item type="text">I was watching the WWDC 2014 Keynote live stream. I was shocked to see Apple loosen up to 3rd Party extensions with iOS 8 and I was in love with the new look in OS X Yosemite. But then my jaw hit the floor. With absolutely no warning, Craig Federighi threw the developer world into a frenzy by unveiling Swift. I was watching the keynote with my friend Nate, who didn't understand what I was so excited about.  (He will be very jealous of me if I get to go to WWDC. We love Craig.)</item>
        <item type="image">craig/200</item>
        <item type="text">Truth is, Objective-C was the reason I hadn't started making iOS apps yet. I hated Objective-C. It was so foreign to me, especially the weird [ ] messaging syntax. But Swift... Swift was new, modern, and sleek. I read the language guide and fell in love with it overnight. Swift has been my language of choice ever since.</item>
    </page>
    
    <page title="Mission: App Store" date="October 2014" icon="appStore">
        <item type="app">inflation</item>
        <item type="text">Armed with a powerful new language and itching to get some real experience, I started hacking away with Xcode. Everyone's first app should be simple, so I looked to Inflation Calculator for my first attempt. </item>
        <item type="text">It's not particularly complicated, but complexity was not my goal. Inflation Calculator helped teach me basic strategies and best practices for making apps. The lessons it taught me have paved the way to much greater things.</item>
        <item type="image">inflationInStore/150</item>
        <item type="text">Inflation Calculator is published on the App Store with over 3,000 downloads. It even has a WatchKit app, if I ever decide to publish the update.</item>
        <item type="image">watch/300</item>
    </page>
    
    <page title="Orbit" date="November 2014" icon="orbit">
        <item type="app">orbit</item>
        <item type="text">  For my first iOS game, I wanted to try something novel instead of emulating another game like I did with Calaga and Molio. I love outer space and I'm fascinated by the intricacies of orbital motion, so I explored this in Orbit.</item>
        <item type="text">The physics behind orbital mechanics is straightforward, but designing a game based on it is not. The most difficult design challenge is constructing it in such a way to fit the "flappy bird" genre of game that's so popular today. I came up with a few ideas, but I moved on to other projects before I got a chance to try and implement them. I still hope to release Orbit eventually, though.</item>
        <item type="text">Fun fact: I also made a version of Orbit in Java back in 2013 as an example for a game engine I was working on. Nothing too fruitful came from the engine, but it did spawn one of my favorite bugs in all of my development history:</item>
        <item type="video4">orbitJava</item>
        <item type="text">I think that one had something to do with a misplaced sign in the function that calculated the acceleration vector. I fixed it eventually...</item>
    </page>
    
    <page title="Squareify" date="2015" icon="squareifyIcon">
        <item type="text">The idea for Squareify arose after I filmed this video during an egg drop experiment in my AP Physics class:</item>
        <item type="video5">~squareifyExample</item>
        <item type="text">My "egg protector" was based on an interesting idea I had, but it failed pretty spectacularly (the egg fell out in mid-air). I thought this was pretty funny, so I wanted to post it on Instagram. The only problem was that Instagram only allows for square videos. I dropped the video into Final Cut, cropped it, added some keyframes, exported it, and sent it back to my phone ready for Instagram.</item>
        <item type="video6">~instagramExample</item>
        <item type="text">I felt like there had to be an easier way than resorting to Final Cut. I searched the App Store, but couldn't find an app that does what I was looking for. I had been trying to come up with a new app to make, and my call was answered.</item>
        <item type="text">Squareify allows the user to select a video, trim it, and then edit it using live panning, scaling, and rotating. It's mostly complete. The editor hasn't been given an actual design, and the exporter doesn't work very well yet, but it's a start.</item>
        <item type="text">Here's a demo showing the in-app process of selecting and editing the video that inspired the app in the first place:</item>
        <item type="video7">~squareify</item>
        <item type="text">This is the video that was exported to the camera roll during the above demo:</item>
        <item type="video8">~squareifyExport</item>
        <item type="text">It works... sorta... not really.</item>
        <item type="text">There's obviously a lot more to do, but I've made good progress. The biggest challenge I have left is figuring out the mysterious world of AVAssetExportSession and working out the kinks. It's not easy, but I'm hoping I'll get it done soon.</item>
    </page>
    
    <page title="This App" date="Now" icon="blankApp">
        <item type="text">Wow! It's been a wild ride. Here we are, back where we started. I've had a lot of fun working on this app, and hopefully I was able to keep you entertained with my life story.</item>
        <item type="text">I'd like to thank my good friend Nate Thompson for all of the critique on this app. It definitely wouldn't be as good without him.</item>
        <item type="text">If I'm really lucky, the next page in my book will be WWDC 2015. It would be an amazing experience to visit San Francisco and attend the convention. My fingers are definitely crossed.</item>
        <item type="image">signatureRight/60</item>
    </page>
    
    <page>Empty Page marks End of File</page>
    
</content>
